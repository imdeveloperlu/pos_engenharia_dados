# -*- coding: utf-8 -*-
"""Bibliotecas de manipulação e visualização de dados.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DYZmvRQYjnktF8zIUzmhrWzmi_TVS6MO
"""

import pandas as pd

#Criando uma série indexada por valores inteiros, iniciando em 0
series = pd.Series([10, 20, 43, 87, 3])
print(series)

#Criando uma série indexada por letras
series = pd.Series([10, 20, 43, 87, 3], index = ['a', 'b', 'c', 'd', 'e'])
print(series)

#Criando uma série indexada por nomes
series = pd.Series([10, 20, 43, 87, 3], index = ['João', 'Maria', 'Pedro', 'Sílvia', 'Alex'])
print(series)

funcionario = {'João': 1500, 'Maria': 2500, 'André': 3000.50, 'Carla': 4000.00, 'Alex': 30000.00}
series = pd.Series(funcionario)

# Exibindo resumo estatístico da série
series.describe()

#Ordenando a série pelo índice
series.sort_index(inplace = True)
print(series)

#Ordenando a série pelo valor
series.sort_values(inplace = True)
print(series)

import pandas as pd
alunos = {'nome' : ['João', 'Maria', 'Carlos', 'Silvia', 'André', 'Juliana'],
          'RA': [1000, 2000, 3000, 4000, 2700, 6000],
          'sexo': ['M', 'F', 'M', 'F', 'M', 'F'],
          'nota': [80.0, 90.0, 75.0, 100.0, 96.5, 98.5]
         }

df = pd.DataFrame(alunos)
df #exibe todo o dataframe

df.head(3) #exibe os 5 primeiros registros

df.sample(2) #exibe os 5 últimos registros

df.describe() # resumo estatístico de todos os campos numéricos

# Lendo dados de um arquivo CSV
notas = pd.read_csv('Notas.csv', sep = ';')
notas

# Imprimindo a quantidade de linhas e colunas
notas.shape

# Exibindo as colunas
notas.columns

# Resumo estatístico de todos os campos numéricos
notas.describe()

#Incluido novas colunas
import numpy as np

notas['Final'] = 0
notas['Media'] = round((notas['D1'] + notas['D2'] + notas['D3'])/3, 2)
notas

#importando e colunas específicas e renomeando as mesmas
notas = pd.read_csv('Notas.csv', sep = ';',
                   usecols = [0, 1], names = ['NomeAluno', 'NotaD1'])
notas

notas = pd.read_csv('Notas.csv', sep = ';', usecols = ['Aluno', 'D3'])
notas

notas = pd.read_csv('Notas.csv', sep = ';')

# Verificando linhas duplicadas
notas.duplicated()

# Removendo linhas duplicadas
notas.drop_duplicates(inplace = True)

notas

alunos = {'nome' : ['João', 'Maria', 'Carlos', 'Silvia', 'André', 'Juliana', 'Alex'],
          'RA': [1000, 2000, 3000, 4000, 2700, 6000, 1000],
          'sexo': ['M', 'F', 'M', 'F', 'M', 'F', 'M'],
          'nota': [80.0, 90.0, 75.0, 100.0, 96.5, 98.5, 90]
         }
df = pd.DataFrame(alunos)
df

# Verificando as linhas que possuem RA duplicado
df.duplicated(subset = ['RA'])

# Exibindo uma cópia do DataFrame as linhas que possuem RA duplicado
df.drop_duplicates(subset = ['RA'])

# Removendo as linhas que possuem RA duplicado
df.drop_duplicates(subset = ['RA'], inplace = True)